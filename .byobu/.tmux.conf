setw -g mode-keys vi
setw -g automatic-rename off

## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

set -g mouse on
set -g prefix C-a

# displays *
bind * list-clients

# next
bind C-n next-window

# prev
bind C-p previous-window

# title
bind A command-prompt "rename-window %%"

# copy-mode
bind -r C-[ copy-mode  # ESC
bind -r C-] paste-buffer

# "bind -r"はrepeat-timeで指定したミリ秒再度Prefixを押さずに入力可能にできる
set -g repeat-time 1000

# ESC キーの効きを良くする
set -s escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# other
bind C-q last-window
bind C-t last-pane
bind C-o run "tmux last-pane || tmux last-window || tmux new-window"

bind C-w choose-window
bind w choose-window

# redisplay
bind C-r refresh-client
bind r refresh-client

# split
bind - split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind C-h select-pane -L
bind j select-pane -D
bind C-j select-pane -D
bind k select-pane -U
bind C-k select-pane -U
bind l select-pane -R
bind C-l select-pane -R

bind J swap-pane -D
bind K swap-pane -U
bind H swap-pane -U
bind L swap-pane -D

# Vimのキーバインドでペインをリサイズする
# -nで定義してあるためPrefixを使わなくて良い
bind -n C-S-Left resize-pane -L 5
bind -n C-S-Down resize-pane -D 5
bind -n C-S-Up resize-pane -U 5
bind -n C-S-Right resize-pane -R 5

bind -n M-1 select-layout even-horizontal
bind -n M-2 select-layout even-vertical
bind -n M-3 select-layout main-horizontal
bind -n M-4 select-layout main-vertical
bind -n M-5 select-layout tiled
bind -n M-o rotate-window -D

# swap-window
bind C-S-Left swap-window -t -1
bind < swap-window -t -1
bind C-S-Right swap-window -t +1
bind > swap-window -t +1

# reload
bind r source-file ~/.byobu/.tmux.conf \; display "Reloaded!"

# reorder windows when one is deleted
set -g renumber-windows on

# ペイン番号を大きく表示
bind i display-panes

# ペイン間で同時オペレーション
bind E setw synchronize-panes on
bind e setw synchronize-panes off

## ステータスバーを上部に表示する
set -g status-position top

if-shell "test -f ~/.tmux.conf.linux" "source-file ~/.tmux.conf.linux" ""
if-shell "uname | grep -q Darwin" "source-file ~/.tmux.conf.osx" ""

bind Q send-keys '[[ -e .ps1 ]] && source .ps1; sudo -Eu root bash' Enter '[[ -n $SSHHOME ]] && source $SSHHOME/.sshrc' Enter

# zooming
bind -r C-e select-pane -t .+1 \; resize-pane -Z

# jump
#run-shell ~/.tmux-jump/tmux-jump.tmux

# ===== logging =====
# B Start logging.
bind B pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> #{pane_current_path}/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
# b Stop logging
bind b pipe-pane \; display-message "Logging end."
# v Open new window. Logging always. (-n is set window name.)
bind v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

