## cpp -P -
#define NAME naoki_ichihara
#define EMAIL naoki_ichihara@sobal.co.jp
[core]
	gitproxy = git-proxy for github.com
	editor = vim
	pager = lv -c
	excludesfile = ~/.gitignore
[alias]
	url = config --get remote.origin.url
	co = checkout
	st = status -s
	stat = status
	ci = commit -v
	di = diff
	sb = show-branch
	unstage = reset HEAD --

	## branch関連
	br = branch
	ba = branch -a ## originも含めた全てのbranchを表示
	bm = branch --merged ## merge済みのbranchを表示
	bn = branch --no-merged ## mergeしてないbranchを表示
	bo = branch -r ## remote branchを表示

	## log関連
	wc = whatchanged         ## logに変更されたファイルも一緒に出す
	ls = log --stat          ## logに変更されたファイルも一緒に出す
	lp = log -p              ## diffも一緒に出す
	la = log --pretty='format:%ad %h (%an): %s' --date=short  ## ざっくりログ出す
	lr = log origin          ## originのlog
	oneline = log --pretty=oneline
	ranking = shortlog -s -n --no-merges

	## diff関連
	dm = diff master           ## masterとのdiff
	dw = diff --color-words    ## 単語単位でいろつけてdiff
	dc = diff --cached         ## addされているものとのdiff
	d1 = diff HEAD~
	d2 = diff HEAD~~
	d3 = diff HEAD~~~
	d4 = diff HEAD~~~~
	d5 = diff HEAD~~~~~
	d10 = diff HEAD~~~~~~~~~~

	## edit関連
	## modified or untrackedなファイルを編集する
	edit = "!f() { git status -s | cut -b 4- | grep -v '\\/$' | uniq ; }; vim `f`"
	## mergeの際にconflictが起きたファイルを編集
	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	## mergeの際にconflictが起きたファイルをadd
	add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
	delete-unmerged = "!f() { git ls-files --deleted | cut -f2 | sort -u ; }; git rm `f`"

	## grep関連
	gr = grep
	gn = grep -n

	## その他
	sm = submodule
	smupdate = submodule foreach "git checkout master; git pull origin master"

[user]
	name = NAME
	email = EMAIL
[diff]
	color = auto
	rename = copy
[pager]
	color = true
[color]
	status = auto
	branch = auto
	interactive = auto
[merge]
	tool = vimdiff
[instaweb]
	httpd = webrick
	browser = w3m
